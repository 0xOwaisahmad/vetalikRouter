{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red70\green137\blue204;\red26\green26\blue41;\red172\green172\blue193;
\red212\green212\blue212;\red167\green197\blue152;\red79\green123\blue61;\red45\green175\blue118;\red31\green133\blue64;
\red253\green181\blue13;\red13\green102\blue149;\red194\green126\blue101;\red140\green108\blue11;\red14\green86\blue166;
\red237\green114\blue173;\red187\green97\blue44;\red115\green123\blue132;}
{\*\expandedcolortbl;;\cssrgb\c33725\c61176\c83922;\cssrgb\c13333\c13725\c21176;\cssrgb\c72941\c73333\c80000;
\cssrgb\c86275\c86275\c86275;\cssrgb\c70980\c80784\c65882;\cssrgb\c37647\c54510\c30588;\cssrgb\c19608\c72941\c53725;\cssrgb\c12941\c58039\c31765;
\cssrgb\c100000\c75686\c2745;\cssrgb\c0\c47843\c65098;\cssrgb\c80784\c56863\c47059;\cssrgb\c61961\c49412\c3137;\cssrgb\c3137\c42353\c70980;
\cssrgb\c95294\c54118\c73333;\cssrgb\c78824\c45882\c22353;\cssrgb\c52549\c55686\c58824;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 pragma\cf4 \strokec4  \cf2 \strokec2 solidity\cf4 \strokec4  \cf5 \strokec5 ^\cf6 \strokec6 0.8.11\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7 //pragma abicoder v2;\cf4 \cb1 \strokec4 \
\
\cf7 \cb3 \strokec7 // SPDX-License-Identifier: MIT\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3 interface IERC20 \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  totalSupply\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  balanceOf\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  account\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  transfer\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  recipient\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  allowance\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  owner\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  spender\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  approve\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  transferFrom\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  sender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  recipient\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 event\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  \cf10 \strokec10 indexed\cf4 \strokec4  from\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  \cf10 \strokec10 indexed\cf4 \strokec4  to\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 event\cf4 \strokec4  Approval\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  \cf10 \strokec10 indexed\cf4 \strokec4  owner\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  \cf10 \strokec10 indexed\cf4 \strokec4  spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  value\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 library\cf4 \strokec4  SafeMath \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 function\cf4 \strokec4  add\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 uint256\cf4 \strokec4  c \cf5 \strokec5 =\cf4 \strokec4  a \cf5 \strokec5 +\cf4 \strokec4  b\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 c \cf5 \strokec5 >=\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "SafeMath: addition overflow"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3         \cf9 \strokec9 return\cf4 \strokec4  c\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  sub\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  sub\cf5 \strokec5 (\cf4 \strokec4 a\cf5 \strokec5 ,\cf4 \strokec4  b\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "SafeMath: subtraction overflow"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  sub\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 string\cf4 \strokec4  \cf13 \strokec13 memory\cf4 \strokec4  errorMessage\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 b \cf5 \strokec5 <=\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  errorMessage\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 uint256\cf4 \strokec4  c \cf5 \strokec5 =\cf4 \strokec4  a \cf5 \strokec5 -\cf4 \strokec4  b\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cb3         \cf9 \strokec9 return\cf4 \strokec4  c\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  mul\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\
\cb3         \cf10 \strokec10 if\cf4 \strokec4  \cf5 \strokec5 (\cf4 \strokec4 a \cf5 \strokec5 ==\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3             \cf9 \strokec9 return\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3         \cf2 \strokec2 uint256\cf4 \strokec4  c \cf5 \strokec5 =\cf4 \strokec4  a \cf5 \strokec5 *\cf4 \strokec4  b\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 c \cf5 \strokec5 /\cf4 \strokec4  a \cf5 \strokec5 ==\cf4 \strokec4  b\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "SafeMath: multiplication overflow"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3         \cf9 \strokec9 return\cf4 \strokec4  c\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  div\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  div\cf5 \strokec5 (\cf4 \strokec4 a\cf5 \strokec5 ,\cf4 \strokec4  b\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "SafeMath: division by zero"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  div\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 string\cf4 \strokec4  \cf13 \strokec13 memory\cf4 \strokec4  errorMessage\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 b \cf5 \strokec5 >\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ,\cf4 \strokec4  errorMessage\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 uint256\cf4 \strokec4  c \cf5 \strokec5 =\cf4 \strokec4  a \cf5 \strokec5 /\cf4 \strokec4  b\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cb3         \cf9 \strokec9 return\cf4 \strokec4  c\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  mod\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  mod\cf5 \strokec5 (\cf4 \strokec4 a\cf5 \strokec5 ,\cf4 \strokec4  b\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "SafeMath: modulo by zero"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  mod\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  a\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint256\cf4 \strokec4  b\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 string\cf4 \strokec4  \cf13 \strokec13 memory\cf4 \strokec4  errorMessage\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 pure\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 b \cf5 \strokec5 !=\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ,\cf4 \strokec4  errorMessage\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  a \cf5 \strokec5 %\cf4 \strokec4  b\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 abstract\cf4 \strokec4  \cf2 \strokec2 contract\cf4 \strokec4  Context \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 function\cf4 \strokec4  _msgSender\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf14 \strokec14 virtual\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  \cf8 \strokec8 payable\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 address\cf4 \strokec4  \cf8 \strokec8 payable\cf4 \strokec4  addr \cf5 \strokec5 =\cf4 \strokec4  \cf8 \strokec8 payable\cf5 \strokec5 (\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  addr\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  _msgData\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf14 \strokec14 virtual\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf11 \strokec11 bytes\cf4 \strokec4  \cf13 \strokec13 memory\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf14 \strokec14 this\cf5 \strokec5 ;\cf4 \strokec4  \cb1 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 data\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 contract\cf4 \strokec4  Ownable \cf2 \strokec2 is\cf4 \strokec4  Context \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 address\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _owner\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 address\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _previousOwner\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint256\cf4 \strokec4  \cf8 \strokec8 private\cf4 \strokec4  _lockTime\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 event\cf4 \strokec4  OwnershipTransferred\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  \cf10 \strokec10 indexed\cf4 \strokec4  previousOwner\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  \cf10 \strokec10 indexed\cf4 \strokec4  newOwner\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\
\cb3     \cf15 \strokec15 constructor\cf4 \strokec4  \cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 address\cf4 \strokec4  msgSender \cf5 \strokec5 =\cf4 \strokec4  _msgSender\cf5 \strokec5 ();\cf4 \cb1 \strokec4 \
\cb3         _owner \cf5 \strokec5 =\cf4 \strokec4  msgSender\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  OwnershipTransferred\cf5 \strokec5 (\cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  msgSender\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  owner\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 address\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  _owner\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 modifier\cf4 \strokec4  onlyOwner\cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 _owner \cf5 \strokec5 ==\cf4 \strokec4  _msgSender\cf5 \strokec5 (),\cf4 \strokec4  \cf12 \strokec12 "Ownable: caller is not the owner"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         _\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  renounceOwnership\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf14 \strokec14 virtual\cf4 \strokec4  onlyOwner \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  OwnershipTransferred\cf5 \strokec5 (\cf4 \strokec4 _owner\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ));\cf4 \cb1 \strokec4 \
\cb3         _owner \cf5 \strokec5 =\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  transferOwnership\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  newOwner\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf14 \strokec14 virtual\cf4 \strokec4  onlyOwner \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 newOwner \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  \cf12 \strokec12 "Ownable: new owner is the zero address"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  OwnershipTransferred\cf5 \strokec5 (\cf4 \strokec4 _owner\cf5 \strokec5 ,\cf4 \strokec4  newOwner\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         _owner \cf5 \strokec5 =\cf4 \strokec4  newOwner\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  geUnlockTime\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  _lockTime\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  lock\cf5 \strokec5 (\cf2 \strokec2 uint256\cf4 \strokec4  time\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf14 \strokec14 virtual\cf4 \strokec4  onlyOwner \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         _previousOwner \cf5 \strokec5 =\cf4 \strokec4  _owner\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         _owner \cf5 \strokec5 =\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         _lockTime \cf5 \strokec5 =\cf4 \strokec4  \cf11 \strokec11 block\cf5 \strokec5 .\cf4 \strokec4 timestamp \cf5 \strokec5 +\cf4 \strokec4  time\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  OwnershipTransferred\cf5 \strokec5 (\cf4 \strokec4 _owner\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ));\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  unlock\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf14 \strokec14 virtual\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 _previousOwner \cf5 \strokec5 ==\cf4 \strokec4  \cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "You don't have permission to unlock"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf11 \strokec11 block\cf5 \strokec5 .\cf4 \strokec4 timestamp \cf5 \strokec5 >\cf4 \strokec4  _lockTime \cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "Contract is locked until 0 days"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  OwnershipTransferred\cf5 \strokec5 (\cf4 \strokec4 _owner\cf5 \strokec5 ,\cf4 \strokec4  _previousOwner\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         _owner \cf5 \strokec5 =\cf4 \strokec4  _previousOwner\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl360\partightenfactor0
\cf2 \cb3 \strokec2 contract\cf4 \strokec4  uniswapTest \cf2 \strokec2 is\cf4 \strokec4  IERC20\cf5 \strokec5 ,\cf4 \strokec4  Ownable \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 using\cf4 \strokec4  SafeMath \cf16 \strokec16 for\cf4 \strokec4  \cf2 \strokec2 uint256\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 mapping\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  => \cf2 \strokec2 uint\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  balances\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 mapping\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  => \cf2 \strokec2 mapping\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  => \cf2 \strokec2 uint\cf5 \strokec5 ))\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _allowance\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 uint8\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _decimals \cf5 \strokec5 =\cf4 \strokec4  \cf6 \strokec6 9\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 uint\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _totalSupply \cf5 \strokec5 =\cf4 \strokec4  \cf6 \strokec6 10000000\cf4 \strokec4  \cf5 \strokec5 *\cf4 \strokec4  \cf6 \strokec6 10\cf4 \strokec4  ** \cf6 \strokec6 9\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 string\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _symbol \cf5 \strokec5 =\cf4 \strokec4  \cf12 \strokec12 "UNITEST"\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 string\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  _name \cf5 \strokec5 =\cf4 \strokec4  \cf12 \strokec12 "swapTest"\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 address\cf4 \strokec4  TestAccount\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 address\cf4 \strokec4  airdropWallet\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 address\cf4 \strokec4  diamondWallet\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf15 \strokec15 constructor\cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  _totalSupply\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  name\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 string\cf4 \strokec4  \cf13 \strokec13 memory\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  _name\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  symbol\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 string\cf4 \strokec4  \cf13 \strokec13 memory\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  _symbol\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  decimals\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint8\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  _decimals\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  totalSupply\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf17 \strokec17 override\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  _totalSupply\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 function\cf4 \strokec4  balanceOf\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  account\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf17 \strokec17 override\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 account\cf5 \strokec5 ];\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf7 \strokec7 /*\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7         transfer(address,amount);\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         to transfer the amount passed in the function,\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         from the wallet of whoever called this funtion to the wallet whos address is passed in the function\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         returns true after the function is executed\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 function\cf4 \strokec4  transfer\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  recipient\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf17 \strokec17 override\cf4 \strokec4  \cf9 \strokec9 returns\cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 recipient \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 ERC20\cf5 \strokec5 :\cf4 \strokec4  transfer to the zero \cf2 \strokec2 address\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 amount \cf5 \strokec5 >\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 Transfer amount must be greater than zero\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 balances\cf5 \strokec5 [\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 >=\cf4 \strokec4  amount\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 balance too low\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         transferToTest\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         transferFromTest\cf5 \strokec5 (\cf4 \strokec4 recipient\cf5 \strokec5 ,\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  transferToTest\cf5 \strokec5 (\cf2 \strokec2 uint\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf9 \strokec9 returns\cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ].\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf4 \strokec4 TestAccount\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 TestAccount\cf5 \strokec5 ].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ,\cf4 \strokec4  TestAccount\cf5 \strokec5 ,\cf4 \strokec4  amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  transferFromTest\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  recipient\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 internal\cf4 \strokec4  \cf9 \strokec9 returns\cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf4 \strokec4 TestAccount\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 TestAccount\cf5 \strokec5 ].\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf4 \strokec4 recipient\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 recipient\cf5 \strokec5 ].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf4 \strokec4 TestAccount\cf5 \strokec5 ,\cf4 \strokec4  recipient\cf5 \strokec5 ,\cf4 \strokec4  amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  transferFrom\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  from\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  to\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf17 \strokec17 override\cf4 \strokec4  \cf9 \strokec9 returns\cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 from \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 ERC20\cf5 \strokec5 :\cf4 \strokec4  transfer from the zero \cf2 \strokec2 address\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 to \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 ERC20\cf5 \strokec5 :\cf4 \strokec4  transfer to the zero \cf2 \strokec2 address\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 amount \cf5 \strokec5 >\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 Transfer amount must be greater than zero\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 balances\cf5 \strokec5 [\cf4 \strokec4 from\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 >=\cf4 \strokec4  amount\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 balance too low\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 _allowance\cf5 \strokec5 [\cf4 \strokec4 from\cf5 \strokec5 ][\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 >=\cf4 \strokec4  amount\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 allowance too low\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf4 \strokec4 from\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 from\cf5 \strokec5 ].\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf4 \strokec4 to\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 to\cf5 \strokec5 ].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         _allowance\cf5 \strokec5 [\cf4 \strokec4 from\cf5 \strokec5 ][\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  _allowance\cf5 \strokec5 [\cf4 \strokec4 from\cf5 \strokec5 ][\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ].\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf4 \strokec4 from\cf5 \strokec5 ,\cf4 \strokec4  to\cf5 \strokec5 ,\cf4 \strokec4  amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \strokec4    \cb1 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  allowance\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  account\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 address\cf4 \strokec4  spender\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf17 \strokec17 override\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint256\cf5 \strokec5 )\{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  _allowance\cf5 \strokec5 [\cf4 \strokec4 account\cf5 \strokec5 ][\cf4 \strokec4 spender\cf5 \strokec5 ];\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 function\cf4 \strokec4  approve\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf17 \strokec17 override\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 spender \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 ERC20\cf5 \strokec5 :\cf4 \strokec4  spender \cf2 \strokec2 is\cf4 \strokec4  the zero \cf2 \strokec2 address\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 amount \cf5 \strokec5 >\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 Amount must be greater than zero\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         _allowance\cf5 \strokec5 [\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ][\cf4 \strokec4 spender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  amount\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  Approval\cf5 \strokec5 (\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ,\cf4 \strokec4  spender\cf5 \strokec5 ,\cf4 \strokec4  amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \strokec4    \cb1 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  increaseAllowance\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  spender\cf5 \strokec5 ,\cf4 \strokec4  \cf2 \strokec2 uint\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 spender \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 ERC20\cf5 \strokec5 :\cf4 \strokec4  spender \cf2 \strokec2 is\cf4 \strokec4  the zero \cf2 \strokec2 address\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 amount \cf5 \strokec5 >\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 Amount must be greater than zero\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         _allowance\cf5 \strokec5 [\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ][\cf4 \strokec4 spender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  _allowance\cf5 \strokec5 [\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ][\cf4 \strokec4 spender\cf5 \strokec5 ].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  Approval\cf5 \strokec5 (\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ,\cf4 \strokec4  spender\cf5 \strokec5 ,\cf4 \strokec4  amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf7 \strokec7 /*\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7         setAirdropWallet(address);\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         only the owner of this contract can call this function\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         and address passed in this function will be set as airdropWallet address\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         returns true after the function is executed\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 function\cf4 \strokec4  setAirdropWallet\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  wallet\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 wallet \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 ERC20\cf5 \strokec5 :\cf4 \strokec4   \cf2 \strokec2 is\cf4 \strokec4  the zero \cf2 \strokec2 address\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         airdropWallet \cf5 \strokec5 =\cf4 \strokec4  wallet\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  setTestWallet\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  wallet\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 wallet \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 ERC20\cf5 \strokec5 :\cf4 \strokec4   \cf2 \strokec2 is\cf4 \strokec4  the zero \cf2 \strokec2 address\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         TestAccount \cf5 \strokec5 =\cf4 \strokec4  wallet\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  airdropWalletAddress\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 address\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  airdropWallet\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\
\cb3     \cf7 \strokec7 /*\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7         setDiamondWallet(address);\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         only the owner of this contract can call this function\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         and address passed in this function will be set as diamondWallet address\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         returns true after the function is executed\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 function\cf4 \strokec4  setDiamondWallet\cf5 \strokec5 (\cf2 \strokec2 address\cf4 \strokec4  wallet\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 wallet \cf5 \strokec5 !=\cf4 \strokec4  \cf2 \strokec2 address\cf5 \strokec5 (\cf6 \strokec6 0\cf5 \strokec5 ),\cf4 \strokec4  \cf12 \strokec12 '\cf4 \strokec4 ERC20\cf5 \strokec5 :\cf4 \strokec4   \cf2 \strokec2 is\cf4 \strokec4  the zero \cf2 \strokec2 address\cf12 \strokec12 '\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         diamondWallet \cf5 \strokec5 =\cf4 \strokec4  wallet\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  diamondWalletAddress\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 address\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  diamondWallet\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf7 \strokec7 /*\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7         claimableAmount();\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         to check the total amount of tokens that can be claimed by user\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         can be used above claim button in the game to show how much the user can claim right now\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 function\cf4 \strokec4  claimableAmount\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  \cf8 \strokec8 view\cf4 \strokec4  \cf9 \strokec9 returns\cf4 \strokec4  \cf5 \strokec5 (\cf2 \strokec2 uint\cf5 \strokec5 )\{\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  _allowance\cf5 \strokec5 [\cf4 \strokec4 airdropWallet\cf5 \strokec5 ][\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ];\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 modifier\cf4 \strokec4  isClaimable\cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 _allowance\cf5 \strokec5 [\cf4 \strokec4 airdropWallet\cf5 \strokec5 ][\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 >\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "There is nothing to claim"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 balances\cf5 \strokec5 [\cf4 \strokec4 airdropWallet\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 >=\cf4 \strokec4  _allowance\cf5 \strokec5 [\cf4 \strokec4 airdropWallet\cf5 \strokec5 ][\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ],\cf4 \strokec4  \cf12 \strokec12 "AIRDROP is at hault, please try later"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         _\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf7 \strokec7 /*\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7         claim();\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         who calls this function will get the amount of token he is rewarded for deposting ingame cash\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         returns true after the function is executed\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         will be used in claim button in the game\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 function\cf4 \strokec4  claim\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  isClaimable \cf9 \strokec9 returns\cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\{\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 uint\cf4 \strokec4  amount \cf5 \strokec5 =\cf4 \strokec4  _allowance\cf5 \strokec5 [\cf4 \strokec4 airdropWallet\cf5 \strokec5 ][\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ];\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf4 \strokec4 airdropWallet\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 airdropWallet\cf5 \strokec5 ].\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         _allowance\cf5 \strokec5 [\cf4 \strokec4 airdropWallet\cf5 \strokec5 ][\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 emit\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf4 \strokec4 airdropWallet\cf5 \strokec5 ,\cf4 \strokec4  \cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender\cf5 \strokec5 ,\cf4 \strokec4  amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 modifier\cf4 \strokec4  onlyAirdropWallet\cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender \cf5 \strokec5 ==\cf4 \strokec4  airdropWallet\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "You are not allowed to access this fuction"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         _\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 modifier\cf4 \strokec4  onlyDiamondWallet\cf5 \strokec5 ()\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf11 \strokec11 msg\cf5 \strokec5 .\cf4 \strokec4 sender \cf5 \strokec5 ==\cf4 \strokec4  diamondWallet\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "You are not allowed to access this fuction"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         _\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf7 \strokec7 /*\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7         chestApproval(address[],uint[]);\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         can only be called by airdropWallet\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         to approve everyone to claim the approved amount of token based on the ingame cash they deposited\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         returns true after the function is executed\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         needs to be called after the ingame cash deposition is closed\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 function\cf4 \strokec4  chestApproval\cf5 \strokec5 (\cf2 \strokec2 address\cf5 \strokec5 []\cf4 \strokec4  \cf13 \strokec13 calldata\cf4 \strokec4  addr\cf5 \strokec5 ,\cf2 \strokec2 uint\cf5 \strokec5 []\cf4 \strokec4  \cf13 \strokec13 calldata\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyAirdropWallet \cf9 \strokec9 returns\cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 uint\cf4 \strokec4  length \cf5 \strokec5 =\cf4 \strokec4  amount\cf5 \strokec5 .\cf4 \strokec4 length\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 length \cf5 \strokec5 ==\cf4 \strokec4  addr\cf5 \strokec5 .\cf4 \strokec4 length\cf5 \strokec5 ,\cf12 \strokec12 "DATA IS INCORRECT"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf16 \strokec16 for\cf5 \strokec5 (\cf2 \strokec2 uint\cf4 \strokec4  i \cf5 \strokec5 =\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ;\cf4 \strokec4  i \cf5 \strokec5 <\cf4 \strokec4  length\cf5 \strokec5 ;\cf4 \strokec4  \cf5 \strokec5 ++\cf4 \strokec4 i\cf5 \strokec5 )\{\cf4 \cb1 \strokec4 \
\cb3             _allowance\cf5 \strokec5 [\cf4 \strokec4 airdropWallet\cf5 \strokec5 ][\cf4 \strokec4 addr\cf5 \strokec5 [\cf4 \strokec4 i\cf5 \strokec5 ]]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  _allowance\cf5 \strokec5 [\cf4 \strokec4 airdropWallet\cf5 \strokec5 ][\cf4 \strokec4 addr\cf5 \strokec5 [\cf4 \strokec4 i\cf5 \strokec5 ]].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 [\cf4 \strokec4 i\cf5 \strokec5 ]);\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\
\cb3     \cf7 \strokec7 /*\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf7 \cb3 \strokec7         diamondConvertion(address[],uint[]);\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         can only be called by diamondWallet\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         to send everyone tokens who have deposited diamond, in same ratio ( 1 diamond = 1 token)\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         returns true after the function is executed\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7         needs to be called daily after diamond deposition\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7     */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 function\cf4 \strokec4  diamondConvertion\cf5 \strokec5 (\cf2 \strokec2 address\cf5 \strokec5 []\cf4 \strokec4  \cf13 \strokec13 calldata\cf4 \strokec4  addr\cf5 \strokec5 ,\cf2 \strokec2 uint\cf5 \strokec5 []\cf4 \strokec4  \cf13 \strokec13 calldata\cf4 \strokec4  amount\cf5 \strokec5 )\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyDiamondWallet \cf9 \strokec9 returns\cf5 \strokec5 (\cf2 \strokec2 bool\cf5 \strokec5 )\cf4 \strokec4  \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 uint\cf4 \strokec4  length \cf5 \strokec5 =\cf4 \strokec4  amount\cf5 \strokec5 .\cf4 \strokec4 length\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 length \cf5 \strokec5 ==\cf4 \strokec4  addr\cf5 \strokec5 .\cf4 \strokec4 length\cf5 \strokec5 ,\cf12 \strokec12 "DATA IS INCORRECT"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf16 \strokec16 for\cf5 \strokec5 (\cf2 \strokec2 uint\cf4 \strokec4  i \cf5 \strokec5 =\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ;\cf4 \strokec4  i \cf5 \strokec5 <\cf4 \strokec4  length\cf5 \strokec5 ;\cf4 \strokec4  \cf5 \strokec5 ++\cf4 \strokec4 i\cf5 \strokec5 )\{\cf4 \cb1 \strokec4 \
\cb3             balances\cf5 \strokec5 [\cf4 \strokec4 addr\cf5 \strokec5 [\cf4 \strokec4 i\cf5 \strokec5 ]]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 addr\cf5 \strokec5 [\cf4 \strokec4 i\cf5 \strokec5 ]].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 [\cf4 \strokec4 i\cf5 \strokec5 ]);\cf4 \cb1 \strokec4 \
\cb3             balances\cf5 \strokec5 [\cf4 \strokec4 diamondWallet\cf5 \strokec5 ]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 diamondWallet\cf5 \strokec5 ].\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 [\cf4 \strokec4 i\cf5 \strokec5 ]);\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 emit\cf4 \strokec4  Transfer\cf5 \strokec5 (\cf4 \strokec4 diamondWallet\cf5 \strokec5 ,\cf4 \strokec4  addr\cf5 \strokec5 [\cf4 \strokec4 i\cf5 \strokec5 ],\cf4 \strokec4  amount\cf5 \strokec5 [\cf4 \strokec4 i\cf5 \strokec5 ]);\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf2 \strokec2 true\cf5 \strokec5 ;\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  withdraw\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf2 \strokec2 address\cf5 \strokec5 (\cf14 \strokec14 this\cf5 \strokec5 ).\cf4 \strokec4 balance \cf5 \strokec5 >\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "Nothing to withdraw"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         \cf8 \strokec8 payable\cf5 \strokec5 (\cf4 \strokec4 owner\cf5 \strokec5 ()).\cf4 \strokec4 transfer\cf5 \strokec5 (\cf2 \strokec2 address\cf5 \strokec5 (\cf14 \strokec14 this\cf5 \strokec5 ).\cf4 \strokec4 balance\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 function\cf4 \strokec4  withdrawToken\cf5 \strokec5 ()\cf4 \strokec4  \cf8 \strokec8 external\cf4 \strokec4  onlyOwner \cf5 \strokec5 \{\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 uint\cf4 \strokec4  amount \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf2 \strokec2 address\cf5 \strokec5 (\cf14 \strokec14 this\cf5 \strokec5 )];\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf5 \strokec5 (\cf4 \strokec4 balances\cf5 \strokec5 [\cf2 \strokec2 address\cf5 \strokec5 (\cf14 \strokec14 this\cf5 \strokec5 )]\cf4 \strokec4  \cf5 \strokec5 >\cf4 \strokec4  \cf6 \strokec6 0\cf5 \strokec5 ,\cf4 \strokec4  \cf12 \strokec12 "Nothing to withdraw"\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf4 \strokec4 owner\cf5 \strokec5 ()]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf4 \strokec4 owner\cf5 \strokec5 ()].\cf4 \strokec4 add\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3         balances\cf5 \strokec5 [\cf2 \strokec2 address\cf5 \strokec5 (\cf14 \strokec14 this\cf5 \strokec5 )]\cf4 \strokec4  \cf5 \strokec5 =\cf4 \strokec4  balances\cf5 \strokec5 [\cf2 \strokec2 address\cf5 \strokec5 (\cf14 \strokec14 this\cf5 \strokec5 )].\cf4 \strokec4 sub\cf5 \strokec5 (\cf4 \strokec4 amount\cf5 \strokec5 );\cf4 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf5 \cb3 \strokec5 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl360\partightenfactor0
\cf4 \cb3   \cb1 \
\
\
\
\
\
\
\
\
\
\
\
\
}